(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49223,       1180]
NotebookOptionsPosition[     48597,       1162]
NotebookOutlinePosition[     48941,       1177]
CellTagsIndexPosition[     48898,       1174]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<Shared\>\""}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<gPlots3DEx`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<gPlotsEx`\>\"", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<gBRDF`\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<gUtils`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<pbrtPath`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<pbrtPathLog`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "sppmPixelArray", ",", "sppmRenderPixelEntry", ",", "getSppmPixelOffset", 
     ",", "getSppmPixel", ",", "\[IndentingNewLine]", "\t", 
     "sppmIntegratorRender", ",", "sppmGenVisPoints", ",", 
     "sppmGenVisPointsBounce", ",", "updateSppmPixel", ",", 
     "\[IndentingNewLine]", "\t", "sppmTracePhotonsBounce", ",", 
     "sppmComputePixelRadiance", ",", "sppmIntegratorRenderIteration", ",", 
     "\[IndentingNewLine]", "\t", "sppmImgTable", ",", "sppmImgColorMul", ",",
      "getSppmImageTable", ",", "updateSppmImageTable", ",", 
     "\[IndentingNewLine]", "\t", "sppmGetTestPixelColor", ",", 
     "sppmValidateSinglePixel", ",", "sppmValidateTilePixels"}], "]"}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sppmPixelArray", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sppmImgColorMul", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmRenderPixelEntry", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "nIteration_", ",", "maxDepth_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tileMin", ",", "tileMax"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tileMin", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pixel", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pixel", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tileMax", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pixel", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"pixel", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"sppmIntegratorRender", "[", 
        RowBox[{
        "tileMin", ",", "tileMax", ",", "scene", ",", "nIteration", ",", 
         "maxDepth"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"SPPMIntegrator", "::", "Render"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmIntegratorRender", "[", 
     RowBox[{
     "tileMin_", ",", "tileMax_", ",", "scene_", ",", "nIteration_", ",", 
      "maxDepth_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nPixels", ",", "resx", ",", "resy", ",", "iter", ",", "i", ",", 
        "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"resx", "=", 
        RowBox[{"scene", "[", "\"\<resx\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"resy", "=", 
        RowBox[{"scene", "[", "\"\<resy\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"init", " ", "SPPM", " ", "pixels"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"nPixels", "=", 
        RowBox[{"resx", "*", "resy"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "nPixels"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sppmPixelArray", "[", 
           RowBox[{"ToString", "@", "i"}], "]"}], "=", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<index\>\"", "\[Rule]", "i"}], ",", 
            RowBox[{"\"\<radius\>\"", "\[Rule]", "0"}], ",", 
            RowBox[{"\"\<ld\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"\"\<l\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<vp_p\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"\"\<vp_wo\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"\"\<vp_bsdf\>\"", "\[Rule]", 
             RowBox[{"<|", "|>"}]}], ",", 
            RowBox[{"\"\<vp_beta\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<phi\>\"", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"\"\<m\>\"", "\[Rule]", "0"}], ",", 
            RowBox[{"\"\<n\>\"", "\[Rule]", "0"}], ",", 
            RowBox[{"\"\<tau\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "|>"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"init", " ", "image", " ", "table"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"sppmImgTable", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", "resx", ",", "resy"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "resx"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "resy"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"sppmImgTable", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "sppmIntegratorRenderIteration", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"iter", "=", "0"}], ",", 
         RowBox[{"iter", "<", "nIteration"}], ",", 
         RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "=", 
           RowBox[{"sppmIntegratorRenderIteration", "[", 
            RowBox[{
            "iter", ",", "tileMin", ",", "tileMax", ",", "scene", ",", 
             "nIteration", ",", "maxDepth"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
  "(*", "sppmIntegratorRenderIteration", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmIntegratorRenderIteration", "[", 
     RowBox[{
     "iter_", ",", "tileMin_", ",", "tileMax_", ",", "scene_", ",", 
      "\[IndentingNewLine]", "nIteration_", ",", "maxDepth_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "pixel", ",", "endLabel"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Part_", "1"}], ":", " ", "sppmGenVisPoints"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"tileMin", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"tileMax", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"tileMin", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"tileMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pixel", "=", 
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"sppmGenVisPoints", "[", 
              RowBox[{"pixel", ",", "scene", ",", "maxDepth"}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Part_", "2"}], ":", "sppmTracePhotons"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"sppmTracePhotons", "[", 
          RowBox[{"pixel", ",", "scene", ",", "maxDepth"}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Part_", "3"}], ":", "sppmUpdatePixelValues"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Part_", "4"}], ":", "sppmComputePixelRadiance"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"iter", "+", "1"}], "!=", "nIteration"}], ",", 
         RowBox[{"Goto", "[", "endLabel", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"tileMin", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"tileMax", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"tileMin", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"tileMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pixel", "=", 
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"sppmComputePixelRadiance", "[", 
              RowBox[{"pixel", ",", "scene", ",", "nIteration"}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Label", "[", "endLabel", "]"}], ";", "\[IndentingNewLine]", 
       "1"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Part_", "1"}], ":", " ", "sppmGenVisPoints"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmGenVisPoints", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "maxDepth_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "camRayo", ",", "camRayd", ",", "beta", ",", "visPts", ",", 
        "sppmPixel"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sppmPixel", "=", 
        RowBox[{"getSppmPixel", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"camRayo", "=", 
        RowBox[{"gAssocData", "[", 
         RowBox[{"scene", ",", "\"\<eyePt\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"camRayd", "=", 
        RowBox[{"pbrtRayDifferential", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Part_", "1"}], ":", "sppmGenVisPointsBounce"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"beta", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"visPts", "=", 
        RowBox[{"sppmGenVisPointsBounce", "[", 
         RowBox[{"pixel", ",", 
          RowBox[{"{", 
           RowBox[{"camRayo", ",", "camRayd"}], "}"}], ",", "beta", ",", 
          "scene", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "visPts"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Part_", "1"}], ":", "sppmGenVisPointsBounce"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmGenVisPointsBounce", "[", 
     RowBox[{
     "pixel_", ",", "ray_", ",", "beta_", ",", "scene_", ",", 
      "bounceIndex_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rayo", ",", "rayd", ",", "l", ",", "ld", ",", "isect1", ",", 
        "isectWithBsdf", ",", "wo", ",", "tmpL", ",", "endLabel"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rayo", "=", 
        RowBox[{"ray", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rayd", "=", 
        RowBox[{"ray", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"l", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ld", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"isect1", "=", 
        RowBox[{"pbrtSceneIntersect", "[", 
         RowBox[{"ray", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "@", "isect1"}], "\[Equal]", "\"\<NaN\>\""}], 
         ",", 
         RowBox[{"Goto", "[", "endLabel", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compute", " ", "BSDF", " ", "at", " ", "SPPM", " ", "camera", " ", 
         "ray", " ", "intersection"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"isectWithBsdf", "=", 
        RowBox[{"pbrtComputeScatteringFunctions", "[", "isect1", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Accumulate", " ", "light", " ", "contributions", " ", "for", " ", 
         "ray", " ", "with", " ", "no", " ", "intersection"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "@", "isectWithBsdf"}], "\[Equal]", 
          "\"\<NaN\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"updateSppmPixel", "[", 
           RowBox[{"pixel", ",", "scene", ",", "\"\<ld\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Goto", "[", "endLabel", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Accumulate", " ", "direct", " ", "illumination", " ", "at", " ", 
         "SPPM", " ", "camera", " ", "ray", " ", "intersection"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"wo", "=", 
        RowBox[{"-", "rayd"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tmpL", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"bounceIndex", ">", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"pbrtSurfaceInteractionLe", "[", 
           RowBox[{"isect1", ",", "wo"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ld", "+=", 
        RowBox[{"beta", "*", "tmpL"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tmpL", "=", 
        RowBox[{"pbrtUniformSampleOneLight", "[", 
         RowBox[{"isectWithBsdf", ",", "scene"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ld", "+=", 
        RowBox[{"beta", "*", "tmpL"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<ld\>\"", ",", "ld"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<vp_p\>\"", ",", 
         RowBox[{"isectWithBsdf", "[", "\"\<p\>\"", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<vp_wo\>\"", ",", "wo"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<vp_bsdf\>\"", ",", 
         RowBox[{"isectWithBsdf", "[", "\"\<bsdf\>\"", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<vp_beta\>\"", ",", "beta"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Label", "[", "endLabel", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Part_", "2"}], ":", "sppmTracePhotons"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmTracePhotons", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "maxDepth_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "uLight0", ",", "uLight1", ",", "light", ",", "lightPdf", ",", 
        "\[IndentingNewLine]", "lightLe", ",", "le", ",", "photonRay", ",", 
        "lightNormal", ",", "pdfPos", ",", "pdfDir", ",", 
        "\[IndentingNewLine]", "beta", ",", "endLabel"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uLight0", "=", 
        RowBox[{"pbrtGet2D", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"uLight1", "=", 
        RowBox[{"pbrtGet2D", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"light", "=", 
        RowBox[{
         RowBox[{"scene", "[", "\"\<lights\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lightPdf", "=", "1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"lightLe", "=", 
        RowBox[{"pbrtLightSampleLe", "[", 
         RowBox[{"light", ",", "uLight0", ",", "uLight1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"le", "=", 
        RowBox[{"lightLe", "[", "\"\<l\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"photonRay", "=", 
        RowBox[{"lightLe", "[", "\"\<photonRay\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lightNormal", "=", 
        RowBox[{"lightLe", "[", "\"\<lightNormal\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pdfPos", "=", 
        RowBox[{"lightLe", "[", "\"\<pdfPos\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pdfDir", "=", 
        RowBox[{"lightLe", "[", "\"\<pdfDir\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pdfPos", "\[Equal]", "0"}], "||", 
          RowBox[{"pdfDir", "\[Equal]", "0"}], "||", 
          RowBox[{"pbrtIsBlack", "[", "le", "]"}]}], ",", 
         RowBox[{"Goto", "[", "endLabel", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"beta", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "@", 
            RowBox[{"Dot", "[", 
             RowBox[{"lightNormal", ",", 
              RowBox[{"photonRay", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "*", "le"}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{
          "lightPdf", " ", "*", " ", "pdfPos", " ", "*", " ", "pdfDir"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pbrtIsBlack", "[", "beta", "]"}], ",", 
         RowBox[{"Goto", "[", "endLabel", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Part_", "2"}], ":", "sppmTracePhotonsBounce"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"sppmTracePhotonsBounce", "[", 
        RowBox[{"photonRay", ",", "beta", ",", "scene", ",", "0"}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Label", "[", "endLabel", "]"}], ";", "\[IndentingNewLine]", 
       "lightLe"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Part_", "4"}], ":", "sppmComputePixelRadiance"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmComputePixelRadiance", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "nIteration_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sppmPixel", ",", "iter", ",", "ld", ",", "l"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sppmPixel", "=", 
        RowBox[{"getSppmPixel", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"Assert", "[", 
        RowBox[{"nIteration", "\[Equal]", "1"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"iter", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ld", "=", 
        RowBox[{"sppmPixel", "[", "\"\<ld\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"l", "=", 
        RowBox[{"ld", "/", 
         RowBox[{"(", 
          RowBox[{"iter", "+", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updateSppmPixel", "[", 
        RowBox[{"pixel", ",", "scene", ",", "\"\<l\>\"", ",", "l"}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"updateSppmImageTable", "[", 
        RowBox[{"pixel", ",", "l"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Part_", "2"}], ":", "sppmTracePhotonsBounce"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmTracePhotonsBounce", "[", 
     RowBox[{"photonRay_", ",", "beta_", ",", "scene_", ",", "bounceIndex_"}],
      "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "1"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSppmImageTable", "[", "pixel_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sppmImgTable", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"pixel", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pixel", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"updateSppmImageTable", "[", 
     RowBox[{"pixel_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "rgbColor", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rgbColor", "=", 
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], " ", "*", " ", 
          "sppmImgColorMul"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"sppmImgTable", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pixel", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"pixel", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "=", 
        "rgbColor"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSppmPixelOffset", "[", 
     RowBox[{"pixel_", ",", "scene_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "pixelOffset", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pixelOffset", "=", 
        RowBox[{
         RowBox[{"pixel", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"pixel", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"scene", "[", "\"\<resx\>\"", "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", "pixelOffset"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSppmPixel", "[", 
     RowBox[{"pixel_", ",", "scene_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pixelOffset", ",", "sppmPixel"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pixelOffset", "=", 
        RowBox[{"getSppmPixelOffset", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sppmPixel", "=", 
        RowBox[{"sppmPixelArray", "[", 
         RowBox[{"ToString", "@", "pixelOffset"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "sppmPixel"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"updateSppmPixel", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "key_", ",", "value_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pixelOffset", ",", "sppmPixel"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pixelOffset", "=", 
        RowBox[{"getSppmPixelOffset", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"sppmPixelArray", "[", 
          RowBox[{"ToString", "@", "pixelOffset"}], "]"}], "[", "key", "]"}], 
        "=", "value"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmGetTestPixelColor", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "testData_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "resx", ",", "resy", ",", "idx", ",", "x", ",", "y", ",", "z"}], "}"}],
       ",", "\n", "\t", 
      RowBox[{
       RowBox[{"resx", "=", 
        RowBox[{"gAssocData", "[", 
         RowBox[{"scene", ",", "\"\<resx\>\""}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"resy", "=", 
        RowBox[{"gAssocData", "[", 
         RowBox[{"scene", ",", "\"\<resy\>\""}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"idx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pixel", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"pixel", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", "resx"}]}], ")"}], "*", 
         "3"}]}], ";", "\n", "\t", 
       RowBox[{"x", "=", 
        RowBox[{"testData", "[", 
         RowBox[{"[", 
          RowBox[{"idx", "+", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"y", "=", 
        RowBox[{"testData", "[", 
         RowBox[{"[", 
          RowBox[{"idx", "+", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"z", "=", 
        RowBox[{"testData", "[", 
         RowBox[{"[", 
          RowBox[{"idx", "+", "3"}], "]"}], "]"}]}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "\n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmValidateSinglePixel", "[", 
     RowBox[{"pixel_", ",", "scene_", ",", "testData_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sppmPixel", ",", "pixelA", ",", "pixelB", ",", "test"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sppmRenderPixelEntry", "[", 
        RowBox[{"pixel", ",", "scene", ",", "1", ",", "1"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sppmPixel", "=", 
        RowBox[{"getSppmPixel", "[", 
         RowBox[{"pixel", ",", "scene"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pixelA", "=", 
        RowBox[{"sppmPixel", "[", "\"\<l\>\"", "]"}]}], ";", 
       RowBox[{"pixelB", "=", 
        RowBox[{"sppmGetTestPixelColor", "[", 
         RowBox[{"pixel", ",", "scene", ",", "testData"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"test", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gColorEquals", "[", 
           RowBox[{"pixelA", ",", "pixelB"}], "]"}], ",", "True", ",", 
          "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"test", ",", "pixelA", ",", "pixelB"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sppmValidateTilePixels", "[", 
     RowBox[{"tileMin_", ",", "tileMax_", ",", "scene_", ",", "testData_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "ret", ",", "testOK", ",", "renderedPixel", ",", 
        "testPixel"}], "}"}], ",", "\n", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"debugData", "=", 
         RowBox[{"{", "}"}]}], ";"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"ret", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<total\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<ok\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<fail\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<black\>\"", "->", "0"}]}], "|>"}]}], ";", "\n", "\t", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"tileMin", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"tileMax", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"tileMin", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "<", 
             RowBox[{"tileMax", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ret", "[", "\"\<total\>\"", "]"}], "+=", "1"}], ";", 
             "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"testOK", ",", "renderedPixel", ",", "testPixel"}], 
               "}"}], "=", 
              RowBox[{"sppmValidateSinglePixel", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], ",", "scene", ",", 
                "testData"}], "]"}]}], ";", "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"testOK", ",", 
               RowBox[{
                RowBox[{"ret", "[", "\"\<ok\>\"", "]"}], "+=", "1"}], ",", 
               RowBox[{
                RowBox[{"ret", "[", "\"\<fail\>\"", "]"}], "+=", "1"}]}], 
              "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "testOK"}], ",", 
               RowBox[{
                RowBox[{"ret", "[", "\"\<failedPixel\>\"", "]"}], "=", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}]}], "]"}], ";", "\n", 
             "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"pbrtIsBlack", "[", "renderedPixel", "]"}], ",", 
               RowBox[{
                RowBox[{"ret", "[", "\"\<black\>\"", "]"}], "+=", "1"}]}], 
              "]"}], ";"}]}], "\n", "\t\t\t", 
           RowBox[{"(*", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"pbrtIsBlack", "[", "renderedColor", "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"{", 
                RowBox[{"i", ",", "j", ","}], "}"}], "]"}]}], "]"}], "*)"}], 
           "\n", "\t\t\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"debugData", ",", "testOK"}], "]"}], ";"}], "*)"}], 
           "\n", "\t\t", "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", 
       "\t", "ret"}]}], "\n", "\t", 
     RowBox[{"(*", "debugData", "*)"}], "\n", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"scene", ",", "l1", ",", "debugPixel", ",", "sppmPixel"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sppmImgColorMul", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scene", "=", 
   RowBox[{"pbrtLoadScene", "[", "\"\<cornell-tiny.scene\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPixel", "=", 
    RowBox[{"{", 
     RowBox[{"85", ",", "61"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debugPixel", "=", 
     RowBox[{"{", 
      RowBox[{"51", ",", "12"}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debugPixel", "=", 
     RowBox[{"{", 
      RowBox[{"87", ",", "69"}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"debugPixel", "=", 
     RowBox[{"{", 
      RowBox[{"78", ",", "76"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"l1", "=", 
     RowBox[{"sppmRenderPixelEntry", "[", 
      RowBox[{"debugPixel", ",", "scene", ",", "1", ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sppmPixel", "=", 
     RowBox[{"getSppmPixel", "[", 
      RowBox[{"debugPixel", ",", "scene"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "sppmPixel", ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sppmIntegratorRender", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"77", ",", "61"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "77"}], "}"}], ",", "scene", ",", "1", ",", "1"}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sppmIntegratorRender", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"86", ",", "68"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"88", ",", "70"}], "}"}], ",", "scene", ",", "1", ",", "1"}], 
     "]"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArrayPlot", "[", "sppmImgTable", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"Import", "[", "\"\<cornell-tiny.pixels\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sppmValidateSinglePixel", "[", 
  RowBox[{"debugPixel", ",", "scene", ",", "testData"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"sppmValidateTilePixels", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"77", ",", "61"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "77"}], "}"}], ",", "scene", ",", "testData"}], 
  "]"}]}], "Input",
 CellChangeTimes->{3.840492589778756*^9},
 CellLabel->
  "In[1730]:=",ExpressionUUID->"3dba4a0d-5a71-4446-a2cf-e523d7321c77"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2llUDe6/x/EQkUwpU2QqU5l+hij6kCHKmKIJ/VIpGnbtJvEzNaDatWs3
STJlJiHJmMqYaK7dvCskQiRDho6z1rn9X5y1/uuci//ntdaz1nPxvXtu3ms9
35G2bib2XeTk5Oz+5/z3nYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKhls0362BNP0afT08NW
6nvw8fsudU9LW6zJ6Xqvs1kelujZZc9y9EfNFQVDyXM7bDfIKTjpUQD95IYU
o8OB0BW9nL9ZezMKT88bOmdQEXqPOPhTdHof0hZra621doLR6eZM+5BiRFad
VrAUHsDgdEu7ZUu3ot0g4kFaRgnUWxPdjT8G4+41LcecemfYpj5sm3GxFEsf
6MftGRiKY3s7psxWd8XjkjFHU1aVoUNpl2G3+lBkl/htsvjqisw9fu+czpfh
rUtrkZOJCPqzVk+XurnhYfTSsyuzymDtXmj5yFWEqcvSd80Pc8M9/5193ieU
YUBsub/vPBGGHtoSdcjaDa497ALMF5ZBI/f1vluFoYirLlr0+ZUrbvkMOTEl
qxS6I27l7pwailVfVi0doOuKSfMKI+uHlyL6gtVuV8cQLGyQmgXauuBcz6uX
hzmUQLv+1qdle4Nh8qXRPmerM/6/35mIiIj+77ivyenw88qF/pyXU48f3YN9
1koY8coWvq672yLG5UNTU32InXwAxvU9a9TZ2x5bNH3CfsoXYub39wclJkH4
Fb0oPvv9ZqgbTtnx/nYRLq2cVRAl3I8RX/XWq+hsge6dkt4b8Kc3hLXbl5kE
Y9nqPMmaWc64ovPtwc+dpRjd9Vmifk0Ilr5IlRXLXOD9JcXARFgGWZRPz3dK
Iqj8kpmaa7pBFr9QYeBgKU4/XvLUsEKE5ss22zPlBPi+5eElqbsUBiX+LnpL
wtDxdYPrFT0BfnkvVhjoL8XW1HnNsevDMHXkk5eahgI4GbtYDjGTYnpAj6Yj
GmHI9ClrPjTuz7zcZON7H8uQWNBrTOhZEVqPtXsteOaGgCPN0c6bymDWphqk
9z0UGW/3aOn1dcNeWdKhmamlmKkSZTppRChC/C3Ugsa64mr3UQ6W70og+pap
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
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERE9G/zX8IRNJY=
   "], {{0, 0}, {100, 100}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.8404925693402243`*^9, 3.8404925945470057`*^9}},
 CellLabel->
  "Out[1762]=",ExpressionUUID->"9d70be68-d70e-496a-bd2e-ff5163334afc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.06175207900573007`", ",", "0.00239058105273215`", ",", 
     "0.0006407529032837546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.061752`", ",", "0.002391`", ",", "0.000641`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8404925693402243`*^9, 3.8404925947325106`*^9}},
 CellLabel->
  "Out[1764]=",ExpressionUUID->"6876aa43-5856-41e7-a384-dc25aa2ff75e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"total\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"ok\"\>", "\[Rule]", "255"}], ",", 
   RowBox[{"\<\"fail\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"black\"\>", "\[Rule]", "49"}], ",", 
   RowBox[{"\<\"failedPixel\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"87", ",", "69"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8404925693402243`*^9, 3.8404926197770653`*^9},
 CellLabel->
  "Out[1765]=",ExpressionUUID->"7b2f86af-7c13-4720-8b2c-d6b3100c8aaf"]
}, Open  ]]
},
WindowSize->{761, 742},
WindowMargins->{{256, Automatic}, {-17, Automatic}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 38268, 957, 5520, "Input",ExpressionUUID->"3dba4a0d-5a71-4446-a2cf-e523d7321c77"],
Cell[38851, 981, 8709, 150, 376, "Output",ExpressionUUID->"9d70be68-d70e-496a-bd2e-ff5163334afc"],
Cell[47563, 1133, 455, 12, 32, "Output",ExpressionUUID->"6876aa43-5856-41e7-a384-dc25aa2ff75e"],
Cell[48021, 1147, 560, 12, 32, "Output",ExpressionUUID->"7b2f86af-7c13-4720-8b2c-d6b3100c8aaf"]
}, Open  ]]
}
]
*)

